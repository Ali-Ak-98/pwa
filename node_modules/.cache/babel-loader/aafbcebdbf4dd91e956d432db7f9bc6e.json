{"ast":null,"code":"import _classCallCheck from\"/home/ali/Desktop/pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ali/Desktop/pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ali/Desktop/pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ali/Desktop/pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./Today.css';import axios from'axios';import Pusher from'pusher-js';var Today=/*#__PURE__*/function(_Component){_inherits(Today,_Component);var _super=_createSuper(Today);// Adds a class constructor that assigns the initial state values:\nfunction Today(){var _this;_classCallCheck(this,Today);_this=_super.call(this);_this.state={btcprice:'',ltcprice:'',ethprice:''};return _this;}// This is called when an instance of a component is being created and inserted into the DOM.\n_createClass(Today,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD').then(function(response){// We set the latest prices in the state to the prices gotten from Cryptocurrency.\n_this2.setState({btcprice:response.data.BTC.USD});_this2.setState({ethprice:response.data.ETH.USD});_this2.setState({ltcprice:response.data.LTC.USD});})// Catch any error here\n.catch(function(error){console.log(error);});// establish a connection to Pusher\nthis.pusher=new Pusher('9dc96423f52ba07a787b',{cluster:'eu',encrypted:true});// Subscribe to the 'coin-prices' channel\nthis.prices=this.pusher.subscribe('coin-prices');}},{key:\"sendPricePusher\",value:function sendPricePusher(data){axios.post('/prices/new',{prices:data}).then(function(response){console.log(response);}).catch(function(error){console.log(error);});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;setInterval(function(){axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD').then(function(response){_this3.sendPricePusher(response.data);}).catch(function(error){console.log(error);});},10000);// We bind to the 'prices' event and use the data in it (price information) to update the state values, thus, realtime changes\nthis.prices.bind('prices',function(price){_this3.setState({btcprice:price.prices.BTC.USD});_this3.setState({ethprice:price.prices.ETH.USD});_this3.setState({ltcprice:price.prices.LTC.USD});},this);}// The render method contains the JSX code which will be compiled to HTML.\n},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"today--section container\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Current Price\"),/*#__PURE__*/React.createElement(\"div\",{className:\"columns today--section__box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"column btc--section\"},/*#__PURE__*/React.createElement(\"h5\",null,\"$\",this.state.btcprice),/*#__PURE__*/React.createElement(\"p\",null,\"1 BTC\")),/*#__PURE__*/React.createElement(\"div\",{className:\"column eth--section\"},/*#__PURE__*/React.createElement(\"h5\",null,\"$\",this.state.ethprice),/*#__PURE__*/React.createElement(\"p\",null,\"1 ETH\")),/*#__PURE__*/React.createElement(\"div\",{className:\"column ltc--section\"},/*#__PURE__*/React.createElement(\"h5\",null,\"$\",this.state.ltcprice),/*#__PURE__*/React.createElement(\"p\",null,\"1 LTC\"))));}}]);return Today;}(Component);export default Today;","map":{"version":3,"sources":["/home/ali/Desktop/pwa/src/Today.js"],"names":["React","Component","axios","Pusher","Today","state","btcprice","ltcprice","ethprice","get","then","response","setState","data","BTC","USD","ETH","LTC","catch","error","console","log","pusher","cluster","encrypted","prices","subscribe","post","setInterval","sendPricePusher","bind","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Today.css'\nimport axios from 'axios'\nimport Pusher from 'pusher-js'\n\n\n\nclass Today extends Component {\n    // Adds a class constructor that assigns the initial state values:\n    constructor () {\n        super();\n        this.state = {\n            btcprice: '',\n            ltcprice: '',\n            ethprice: ''\n        };\n    }\n    // This is called when an instance of a component is being created and inserted into the DOM.\n    componentWillMount () {\n        axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\n            .then(response => {\n                // We set the latest prices in the state to the prices gotten from Cryptocurrency.\n                this.setState({ btcprice: response.data.BTC.USD });\n                this.setState({ ethprice: response.data.ETH.USD });\n                this.setState({ ltcprice: response.data.LTC.USD });\n            })\n            // Catch any error here\n            .catch(error => {\n                console.log(error)\n            })\n\n        // establish a connection to Pusher\n        this.pusher = new Pusher('9dc96423f52ba07a787b', {\n            cluster: 'eu',\n            encrypted: true\n        });\n        // Subscribe to the 'coin-prices' channel\n        this.prices = this.pusher.subscribe('coin-prices');\n    }\n\n    sendPricePusher (data) {\n        axios.post('/prices/new', {\n            prices: data\n        })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    componentDidMount () {\n        setInterval(() => {\n            axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\n                .then(response => {\n                    this.sendPricePusher (response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }, 10000)\n\n        // We bind to the 'prices' event and use the data in it (price information) to update the state values, thus, realtime changes\n        this.prices.bind('prices', price => {\n            this.setState({ btcprice: price.prices.BTC.USD });\n            this.setState({ ethprice: price.prices.ETH.USD });\n            this.setState({ ltcprice: price.prices.LTC.USD });\n        }, this);\n    }\n\n    // The render method contains the JSX code which will be compiled to HTML.\n    render() {\n        return (\n            <div className=\"today--section container\">\n                <h2>Current Price</h2>\n                <div className=\"columns today--section__box\">\n                    <div className=\"column btc--section\">\n                        <h5>${this.state.btcprice}</h5>\n                        <p>1 BTC</p>\n                    </div>\n                    <div className=\"column eth--section\">\n                        <h5>${this.state.ethprice}</h5>\n                        <p>1 ETH</p>\n                    </div>\n                    <div className=\"column ltc--section\">\n                        <h5>${this.state.ltcprice}</h5>\n                        <p>1 LTC</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Today;\n"]},"metadata":{},"sourceType":"module"}