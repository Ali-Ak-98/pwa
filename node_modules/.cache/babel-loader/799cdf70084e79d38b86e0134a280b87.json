{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/pwa/src/History.js\";\nimport React, { Component } from 'react'; // import './History.css'\n\nimport axios from 'axios';\nimport moment from 'moment';\nexport default class History extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todayprice: {},\n      yesterdayprice: {},\n      twodaysprice: {},\n      threedaysprice: {},\n      fourdaysprice: {}\n    };\n    this.getBTCPrices = this.getBTCPrices.bind(this);\n    this.getETHPrices = this.getETHPrices.bind(this);\n    this.getLTCPrices = this.getLTCPrices.bind(this);\n  } // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\n\n\n  getETHPrices(date) {\n    return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n  } // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n\n\n  getBTCPrices(date) {\n    return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n  } // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n\n\n  getLTCPrices(date) {\n    return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n  } // This function gets the prices for the current date.\n\n\n  getTodayPrice() {\n    // Get today's date in timestamp\n    let t = moment().unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n    axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread((eth, btc, ltc) => {\n      let f = {\n        date: moment.unix(t).format(\"MMMM Do YYYY\"),\n        eth: eth.data.ETH.USD,\n        btc: btc.data.BTC.USD,\n        ltc: ltc.data.LTC.USD\n      }; // Set the state of todayprice to the content of the object f\n\n      this.setState({\n        todayprice: f\n      });\n    }));\n  } // This function gets the prices for the yesterday.\n\n\n  getYesterdayPrice() {\n    // Get yesterday's date in timestamp\n    let t = moment().subtract(1, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n    axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread((eth, btc, ltc) => {\n      let f = {\n        date: moment.unix(t).format(\"MMMM Do YYYY\"),\n        eth: eth.data.ETH.USD,\n        btc: btc.data.BTC.USD,\n        ltc: ltc.data.LTC.USD\n      }; // Set the state of yesterdayprice to the content of the object f\n\n      this.setState({\n        yesterdayprice: f\n      });\n    }));\n  } // This function gets the prices for the two days ago.\n\n\n  getTwoDaysPrice() {\n    // Get the date for two days ago in timestamp\n    let t = moment().subtract(2, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n    axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread((eth, btc, ltc) => {\n      let f = {\n        date: moment.unix(t).format(\"MMMM Do YYYY\"),\n        eth: eth.data.ETH.USD,\n        btc: btc.data.BTC.USD,\n        ltc: ltc.data.LTC.USD\n      }; // Set the state of twodaysprice to the content of the object f\n\n      this.setState({\n        twodaysprice: f\n      });\n    }));\n  } // This function gets the prices for the three days ago.\n\n\n  getThreeDaysPrice() {\n    // Get the date for three days ago in timestamp\n    let t = moment().subtract(3, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n    axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread((eth, btc, ltc) => {\n      let f = {\n        date: moment.unix(t).format(\"MMMM Do YYYY\"),\n        eth: eth.data.ETH.USD,\n        btc: btc.data.BTC.USD,\n        ltc: ltc.data.LTC.USD\n      }; // Set the state of threedaysprice to the content of the object f\n\n      this.setState({\n        threedaysprice: f\n      });\n    }));\n  } // This function gets the prices for the four days ago.\n\n\n  getFourDaysPrice() {\n    // Get the date for four days ago in timestamp\n    let t = moment().subtract(4, 'days').unix(); // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n\n    axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)]).then(axios.spread((eth, btc, ltc) => {\n      let f = {\n        date: moment.unix(t).format(\"MMMM Do YYYY\"),\n        eth: eth.data.ETH.USD,\n        btc: btc.data.BTC.USD,\n        ltc: ltc.data.LTC.USD\n      }; // Set the state of fourdaysprice to the content of the object f\n\n      this.setState({\n        fourdaysprice: f\n      });\n    }));\n  } // This is called when an instance of a component is being created and inserted into the DOM.\n\n\n  componentWillMount() {\n    this.getTodayPrice();\n    this.getYesterdayPrice();\n    this.getTwoDaysPrice();\n    this.getThreeDaysPrice();\n    this.getFourDaysPrice();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"History (Past 5 days)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section__box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section__box__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, this.state.todayprice.date), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, \"1 BTC = $\", this.state.todayprice.btc)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, \"1 ETH = $\", this.state.todayprice.eth)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, \"1 LTC = $\", this.state.todayprice.ltc)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section__box__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, this.state.yesterdayprice.date), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, \"1 BTC = $\", this.state.yesterdayprice.btc)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, \"1 ETH = $\", this.state.yesterdayprice.eth)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, \"1 LTC = $\", this.state.yesterdayprice.ltc)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section__box__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, this.state.twodaysprice.date), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, \"1 BTC = $\", this.state.twodaysprice.btc)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, \"1 ETH = $\", this.state.twodaysprice.eth)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, \"1 LTC = $\", this.state.twodaysprice.ltc)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section__box__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, this.state.threedaysprice.date), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, \"1 BTC = $\", this.state.threedaysprice.btc)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, \"1 ETH = $\", this.state.threedaysprice.eth)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, \"1 LTC = $\", this.state.threedaysprice.ltc)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history--section__box__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, this.state.fourdaysprice.date), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, \"1 BTC = $\", this.state.fourdaysprice.btc)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, \"1 ETH = $\", this.state.fourdaysprice.eth)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, \"1 LTC = $\", this.state.fourdaysprice.ltc))))));\n  }\n\n}","map":{"version":3,"sources":["/home/ali/Desktop/pwa/src/History.js"],"names":["React","Component","axios","moment","History","constructor","state","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","getBTCPrices","bind","getETHPrices","getLTCPrices","date","get","getTodayPrice","t","unix","all","then","spread","eth","btc","ltc","f","format","data","ETH","USD","BTC","LTC","setState","getYesterdayPrice","subtract","getTwoDaysPrice","getThreeDaysPrice","getFourDaysPrice","componentWillMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './History.css'\nimport axios from 'axios'\nimport moment from 'moment'\n\nexport default class History extends Component {\n    constructor () {\n        super();\n        this.state = {\n            todayprice: {},\n            yesterdayprice: {},\n            twodaysprice: {},\n            threedaysprice: {},\n            fourdaysprice: {}\n        }\n        this.getBTCPrices = this.getBTCPrices.bind(this);\n        this.getETHPrices = this.getETHPrices.bind(this);\n        this.getLTCPrices = this.getLTCPrices.bind(this);\n    }\n    // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\n    getETHPrices (date) {\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n    }\n    // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n    getBTCPrices (date) {\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n    }\n    // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n    getLTCPrices (date) {\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n    }\n    // This function gets the prices for the current date.\n    getTodayPrice () {\n        // Get today's date in timestamp\n        let t = moment().unix()\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                let f = {\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                }\n                // Set the state of todayprice to the content of the object f\n                this.setState({ todayprice: f });\n            }));\n    }\n    // This function gets the prices for the yesterday.\n    getYesterdayPrice () {\n        // Get yesterday's date in timestamp\n        let t = moment().subtract(1, 'days').unix();\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                let f = {\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                }\n                // Set the state of yesterdayprice to the content of the object f\n                this.setState({ yesterdayprice: f });\n            }));\n    }\n    // This function gets the prices for the two days ago.\n    getTwoDaysPrice () {\n        // Get the date for two days ago in timestamp\n        let t = moment().subtract(2, 'days').unix();\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                let f = {\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                }\n                // Set the state of twodaysprice to the content of the object f\n                this.setState({ twodaysprice: f });\n            }));\n    }\n    // This function gets the prices for the three days ago.\n    getThreeDaysPrice () {\n        // Get the date for three days ago in timestamp\n        let t = moment().subtract(3, 'days').unix();\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                let f = {\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                }\n                // Set the state of threedaysprice to the content of the object f\n                this.setState({ threedaysprice: f });\n            }));\n    }\n    // This function gets the prices for the four days ago.\n    getFourDaysPrice () {\n        // Get the date for four days ago in timestamp\n        let t = moment().subtract(4, 'days').unix();\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                let f = {\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                }\n                // Set the state of fourdaysprice to the content of the object f\n                this.setState({ fourdaysprice: f });\n            }));\n    }\n    // This is called when an instance of a component is being created and inserted into the DOM.\n    componentWillMount () {\n        this.getTodayPrice();\n        this.getYesterdayPrice();\n        this.getTwoDaysPrice();\n        this.getThreeDaysPrice();\n        this.getFourDaysPrice();\n    }\n\n    render() {\n        return (\n            <div className=\"history--section container\">\n                <h2>History (Past 5 days)</h2>\n                <div className=\"history--section__box\">\n                    <div className=\"history--section__box__inner\">\n                        <h4>{this.state.todayprice.date}</h4>\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                <p>1 BTC = ${this.state.todayprice.btc}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 ETH = ${this.state.todayprice.eth}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 LTC = ${this.state.todayprice.ltc}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history--section__box__inner\">\n                        <h4>{this.state.yesterdayprice.date}</h4>\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                <p>1 BTC = ${this.state.yesterdayprice.btc}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 ETH = ${this.state.yesterdayprice.eth}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 LTC = ${this.state.yesterdayprice.ltc}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history--section__box__inner\">\n                        <h4>{this.state.twodaysprice.date}</h4>\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                <p>1 BTC = ${this.state.twodaysprice.btc}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 ETH = ${this.state.twodaysprice.eth}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 LTC = ${this.state.twodaysprice.ltc}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history--section__box__inner\">\n                        <h4>{this.state.threedaysprice.date}</h4>\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                <p>1 BTC = ${this.state.threedaysprice.btc}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 ETH = ${this.state.threedaysprice.eth}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 LTC = ${this.state.threedaysprice.ltc}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history--section__box__inner\">\n                        <h4>{this.state.fourdaysprice.date}</h4>\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                <p>1 BTC = ${this.state.fourdaysprice.btc}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 ETH = ${this.state.fourdaysprice.eth}</p>\n                            </div>\n                            <div className=\"column\">\n                                <p>1 LTC = ${this.state.fourdaysprice.ltc}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}